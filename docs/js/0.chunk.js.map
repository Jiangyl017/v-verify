{"version":3,"sources":["webpack:///js/0.chunk.js","webpack:///./example/pages/usage.md"],"names":["webpackJsonp","320","module","exports","template"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,SAAA","file":"js/0.chunk.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 320:\n/***/ (function(module, exports) {\n\nmodule.exports = { template: \"<div class=\\\"markdown-body\\\"><h3 id=\\\"-\\\">安装</h3>\\n<p><strong>v-verify</strong> 和其他的 <code>vue</code> 插件一样，使用 <code>Vue.use()</code> 方法注册。</p>\\n<pre><code class=\\\"lang-javascript\\\"><span class=\\\"hljs-keyword\\\">import</span> Vue form <span class=\\\"hljs-string\\\">'vue'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> vverify from <span class=\\\"hljs-string\\\">'v-verify'</span>\\nVue.use(vverify, <span class=\\\"hljs-built_in\\\">config</span>)\\n</code></pre>\\n<h3 id=\\\"-config-\\\">配置（config）</h3>\\n<p>考虑到验证场景的高度个性化，<strong>v-verify</strong> 提供了比较少的公共验证器，你可以在 <code>v-verify</code> 定义你自己的验证器，如果和公共验证器重复，自定义的验证器将会覆盖公共验证器。</p>\\n<pre><code class=\\\"lang-javascript\\\"><span class=\\\"hljs-selector-tag\\\">Vue</span><span class=\\\"hljs-selector-class\\\">.use</span>(<span class=\\\"hljs-selector-tag\\\">vverify</span>, {\\n  <span class=\\\"hljs-attribute\\\">validators</span>: {\\n    email: RegExp|[RegExp, ...]|Function,\\n    ...\\n  }\\n})\\n</code></pre>\\n<p>验证器定义支持三种形式</p>\\n<ul>\\n<li>正则表达式</li>\\n<li>正则表达式列表</li>\\n<li>函数，必须返回布尔值</li>\\n</ul>\\n<p>当自定义了验证器，你最好提供对应的验证提示消息</p>\\n<pre><code class=\\\"lang-javascript\\\">Vue.use(vverify, {\\n  <span class=\\\"hljs-attr\\\">el</span>: <span class=\\\"hljs-string\\\">'.markdown-body'</span>, <span class=\\\"hljs-comment\\\">// dom 容器，如何你使用默认弹窗</span>\\n  lang: <span class=\\\"hljs-string\\\">'zh-cn'</span>, <span class=\\\"hljs-comment\\\">// 提示语言</span>\\n  vtips: <span class=\\\"hljs-built_in\\\">Function</span>, <span class=\\\"hljs-comment\\\">// 自定义提示方法</span>\\n  validators: { <span class=\\\"hljs-comment\\\">// 自定义验证器</span>\\n    email: <span class=\\\"hljs-built_in\\\">RegExp</span>|[<span class=\\\"hljs-built_in\\\">RegExp</span>, ...]|<span class=\\\"hljs-built_in\\\">Function</span>,\\n    ...\\n  },\\n  <span class=\\\"hljs-attr\\\">messages</span>: { <span class=\\\"hljs-comment\\\">// 验证器消息提示</span>\\n    email: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">filed</span>) =&gt;</span> <span class=\\\"hljs-string\\\">`<span class=\\\"hljs-subst\\\">${filed}</span>不符合指定邮箱格式`</span>, <span class=\\\"hljs-comment\\\">// return 提示信息</span>\\n    ...\\n  }\\n})\\n</code></pre>\\n<ul>\\n<li>language: <code>v-verify</code> 为公共验证器提供了 <code>zh-cn</code> 、<code>en-us</code>两种错误提示语言, 默认 <code>zh-cn</code></li>\\n<li>vtips: <code>v-verify</code> 提供了默认的验证器不通过时消息提时，当你自定义了将覆盖默认的</li>\\n<li>el 由于 <code>vue</code> 应用基本都为单页面应用，如果没有el， 选项，vtips将直接插在 <code>document.body</code> 中，这样在单页面切换的时候，tips弹窗会出现在其他页面。所以el选项应该为 <router-view></router-view>的父元素</li>\\n</ul>\\n<h3 id=\\\"-\\\">自定义验证器</h3>\\n<p>比如你说你有一个需求只能接受以 <code>zing.com</code> 结尾的公司邮箱，你就可以这样自定义</p>\\n<pre><code class=\\\"lang-javascript\\\">Vue.use(vverify, {\\n  <span class=\\\"hljs-attr\\\">el</span>: <span class=\\\"hljs-string\\\">'.markdown-body'</span>, <span class=\\\"hljs-comment\\\">// dom 容器，如何你使用默认弹窗</span>\\n  lang: <span class=\\\"hljs-string\\\">'zh-cn'</span>, <span class=\\\"hljs-comment\\\">// 提示语言</span>\\n  vtips: <span class=\\\"hljs-built_in\\\">Function</span>, <span class=\\\"hljs-comment\\\">// 自定义提示方法</span>\\n  validators: { <span class=\\\"hljs-comment\\\">// 自定义验证器</span>\\n    zing: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">value</span>) =&gt;</span> {\\n      <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-regexp\\\">/^[a-zA-Z0-9_-]+@zing\\\\\\\\.com$/</span>.test(value)\\n    },\\n    ...\\n  },\\n  <span class=\\\"hljs-attr\\\">messages</span>: { <span class=\\\"hljs-comment\\\">// 验证器消息提示</span>\\n    zing: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">filed</span>) =&gt;</span> <span class=\\\"hljs-string\\\">`<span class=\\\"hljs-subst\\\">${filed}</span>必须以@zing.com结尾`</span>,\\n    ...\\n  }\\n})\\n</code></pre>\\n<pre><code class=\\\"lang-html\\\">&lt;<span class=\\\"hljs-selector-tag\\\">input</span> class=<span class=\\\"hljs-string\\\">\\\"example-input\\\"</span>\\n       v-verify<span class=\\\"hljs-selector-class\\\">.input</span><span class=\\\"hljs-selector-class\\\">.blur</span>=<span class=\\\"hljs-string\\\">\\\"'required|email|zing'\\\"</span>\\n       placeholder=<span class=\\\"hljs-string\\\">\\\"YYYY-MM-DD\\\"</span>/&gt;\\n</code></pre>\\n<p>如果有参数， 可以在 <code>value</code> 后面直接加参数, 然后用符号 <code>:</code> 传参</p>\\n<pre><code class=\\\"lang-javascript\\\">(<span class=\\\"hljs-keyword\\\">value</span>, <span class=\\\"hljs-keyword\\\">params</span>) =&gt; {\\n  ...\\n}\\n</code></pre>\\n<h3 id=\\\"-\\\">使用</h3>\\n<p>在你自定义验证器之后就可以和公共验证器一样使用</p>\\n<pre><code class=\\\"lang-html\\\">&lt;<span class=\\\"hljs-selector-tag\\\">input</span> class=<span class=\\\"hljs-string\\\">\\\"example-input\\\"</span>\\n       v-verify<span class=\\\"hljs-selector-class\\\">.input</span><span class=\\\"hljs-selector-class\\\">.blur</span>=<span class=\\\"hljs-string\\\">\\\"'required|date'\\\"</span>\\n       placeholder=<span class=\\\"hljs-string\\\">\\\"YYYY-MM-DD\\\"</span>/&gt;\\n</code></pre>\\n<p>好了， 是不是很简单。快去看<a href=\\\"/#/introduction\\\">基本介绍</a>吧</p>\\n</div>\"};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/0.chunk.js","module.exports = { template: \"<div class=\\\"markdown-body\\\"><h3 id=\\\"-\\\">安装</h3>\\n<p><strong>v-verify</strong> 和其他的 <code>vue</code> 插件一样，使用 <code>Vue.use()</code> 方法注册。</p>\\n<pre><code class=\\\"lang-javascript\\\"><span class=\\\"hljs-keyword\\\">import</span> Vue form <span class=\\\"hljs-string\\\">'vue'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> vverify from <span class=\\\"hljs-string\\\">'v-verify'</span>\\nVue.use(vverify, <span class=\\\"hljs-built_in\\\">config</span>)\\n</code></pre>\\n<h3 id=\\\"-config-\\\">配置（config）</h3>\\n<p>考虑到验证场景的高度个性化，<strong>v-verify</strong> 提供了比较少的公共验证器，你可以在 <code>v-verify</code> 定义你自己的验证器，如果和公共验证器重复，自定义的验证器将会覆盖公共验证器。</p>\\n<pre><code class=\\\"lang-javascript\\\"><span class=\\\"hljs-selector-tag\\\">Vue</span><span class=\\\"hljs-selector-class\\\">.use</span>(<span class=\\\"hljs-selector-tag\\\">vverify</span>, {\\n  <span class=\\\"hljs-attribute\\\">validators</span>: {\\n    email: RegExp|[RegExp, ...]|Function,\\n    ...\\n  }\\n})\\n</code></pre>\\n<p>验证器定义支持三种形式</p>\\n<ul>\\n<li>正则表达式</li>\\n<li>正则表达式列表</li>\\n<li>函数，必须返回布尔值</li>\\n</ul>\\n<p>当自定义了验证器，你最好提供对应的验证提示消息</p>\\n<pre><code class=\\\"lang-javascript\\\">Vue.use(vverify, {\\n  <span class=\\\"hljs-attr\\\">el</span>: <span class=\\\"hljs-string\\\">'.markdown-body'</span>, <span class=\\\"hljs-comment\\\">// dom 容器，如何你使用默认弹窗</span>\\n  lang: <span class=\\\"hljs-string\\\">'zh-cn'</span>, <span class=\\\"hljs-comment\\\">// 提示语言</span>\\n  vtips: <span class=\\\"hljs-built_in\\\">Function</span>, <span class=\\\"hljs-comment\\\">// 自定义提示方法</span>\\n  validators: { <span class=\\\"hljs-comment\\\">// 自定义验证器</span>\\n    email: <span class=\\\"hljs-built_in\\\">RegExp</span>|[<span class=\\\"hljs-built_in\\\">RegExp</span>, ...]|<span class=\\\"hljs-built_in\\\">Function</span>,\\n    ...\\n  },\\n  <span class=\\\"hljs-attr\\\">messages</span>: { <span class=\\\"hljs-comment\\\">// 验证器消息提示</span>\\n    email: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">filed</span>) =&gt;</span> <span class=\\\"hljs-string\\\">`<span class=\\\"hljs-subst\\\">${filed}</span>不符合指定邮箱格式`</span>, <span class=\\\"hljs-comment\\\">// return 提示信息</span>\\n    ...\\n  }\\n})\\n</code></pre>\\n<ul>\\n<li>language: <code>v-verify</code> 为公共验证器提供了 <code>zh-cn</code> 、<code>en-us</code>两种错误提示语言, 默认 <code>zh-cn</code></li>\\n<li>vtips: <code>v-verify</code> 提供了默认的验证器不通过时消息提时，当你自定义了将覆盖默认的</li>\\n<li>el 由于 <code>vue</code> 应用基本都为单页面应用，如果没有el， 选项，vtips将直接插在 <code>document.body</code> 中，这样在单页面切换的时候，tips弹窗会出现在其他页面。所以el选项应该为 <router-view></router-view>的父元素</li>\\n</ul>\\n<h3 id=\\\"-\\\">自定义验证器</h3>\\n<p>比如你说你有一个需求只能接受以 <code>zing.com</code> 结尾的公司邮箱，你就可以这样自定义</p>\\n<pre><code class=\\\"lang-javascript\\\">Vue.use(vverify, {\\n  <span class=\\\"hljs-attr\\\">el</span>: <span class=\\\"hljs-string\\\">'.markdown-body'</span>, <span class=\\\"hljs-comment\\\">// dom 容器，如何你使用默认弹窗</span>\\n  lang: <span class=\\\"hljs-string\\\">'zh-cn'</span>, <span class=\\\"hljs-comment\\\">// 提示语言</span>\\n  vtips: <span class=\\\"hljs-built_in\\\">Function</span>, <span class=\\\"hljs-comment\\\">// 自定义提示方法</span>\\n  validators: { <span class=\\\"hljs-comment\\\">// 自定义验证器</span>\\n    zing: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">value</span>) =&gt;</span> {\\n      <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-regexp\\\">/^[a-zA-Z0-9_-]+@zing\\\\\\\\.com$/</span>.test(value)\\n    },\\n    ...\\n  },\\n  <span class=\\\"hljs-attr\\\">messages</span>: { <span class=\\\"hljs-comment\\\">// 验证器消息提示</span>\\n    zing: <span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">filed</span>) =&gt;</span> <span class=\\\"hljs-string\\\">`<span class=\\\"hljs-subst\\\">${filed}</span>必须以@zing.com结尾`</span>,\\n    ...\\n  }\\n})\\n</code></pre>\\n<pre><code class=\\\"lang-html\\\">&lt;<span class=\\\"hljs-selector-tag\\\">input</span> class=<span class=\\\"hljs-string\\\">\\\"example-input\\\"</span>\\n       v-verify<span class=\\\"hljs-selector-class\\\">.input</span><span class=\\\"hljs-selector-class\\\">.blur</span>=<span class=\\\"hljs-string\\\">\\\"'required|email|zing'\\\"</span>\\n       placeholder=<span class=\\\"hljs-string\\\">\\\"YYYY-MM-DD\\\"</span>/&gt;\\n</code></pre>\\n<p>如果有参数， 可以在 <code>value</code> 后面直接加参数, 然后用符号 <code>:</code> 传参</p>\\n<pre><code class=\\\"lang-javascript\\\">(<span class=\\\"hljs-keyword\\\">value</span>, <span class=\\\"hljs-keyword\\\">params</span>) =&gt; {\\n  ...\\n}\\n</code></pre>\\n<h3 id=\\\"-\\\">使用</h3>\\n<p>在你自定义验证器之后就可以和公共验证器一样使用</p>\\n<pre><code class=\\\"lang-html\\\">&lt;<span class=\\\"hljs-selector-tag\\\">input</span> class=<span class=\\\"hljs-string\\\">\\\"example-input\\\"</span>\\n       v-verify<span class=\\\"hljs-selector-class\\\">.input</span><span class=\\\"hljs-selector-class\\\">.blur</span>=<span class=\\\"hljs-string\\\">\\\"'required|date'\\\"</span>\\n       placeholder=<span class=\\\"hljs-string\\\">\\\"YYYY-MM-DD\\\"</span>/&gt;\\n</code></pre>\\n<p>好了， 是不是很简单。快去看<a href=\\\"/#/introduction\\\">基本介绍</a>吧</p>\\n</div>\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example/pages/usage.md\n// module id = 320\n// module chunks = 0"],"sourceRoot":""}