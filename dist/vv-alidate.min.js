!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e["vv-alidate"]=t()}(this,function(){"use strict";function e(e){var t={};return"Boolean Number String Function Array Date RegExp Object tips".split(" ").forEach(function(e,n){t["[object "+e+"]"]=e.toLowerCase()}),null==e?String(e):"object"==typeof e||"function"==typeof e?t[t.toString.call(e)]||"object":typeof e}function t(t,n){var r=null;switch(e(t.reg)){case"regexp":r=function(e){return!!t.reg.test(e)};break;case"array":r=function(e){for(var n=t.reg,r=!0,o=0;o<n.length&&("regexp"===_typeof(n[o])&&(r=n[o].test(e)),r);o++);return r};break;case"function":r=function(e){return t.reg(e)};break;default:r=function(e){throw new function(){return"type wrong in the config file"}}}return r}function n(e,t,n){e.directive(t,{bind:function(e){e.addEventListener("change",function(e){n(e.target.value)})}})}function r(e,r){var i=r.tips||function(e){alert(e)},c=Object.assign(o,r.validators={}),f=Object.keys(c);e.prototype.$verify={};try{f.forEach(function(r){e.prototype.$verify[r]=t(verifyObj[r],i),n(e,r,e.prototype.$verify[r])})}catch(e){console.log(e)}}var o={date:{reg:/^[1|2][0-9]{3}-[0-1][0-9]-[0-3][0-9]$/,msg:"sorry, the date format is incorrect"}};return"undefined"!=typeof window&&window.Vue&&r(window.Vue),{install:r}});